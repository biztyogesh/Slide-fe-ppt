{"ast":null,"code":"var _jsxFileName = \"E:\\\\BizTecno\\\\slide-fe-service\\\\src\\\\containers\\\\PngSvgReports\\\\utils.tsx\";\nimport { Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function convertDateToPST(createdAt) {\n  const date = new Date(createdAt);\n  // Format the time part as \"10:46AM\"\n  const timeString = date.toLocaleString('en-US', {\n    hour: 'numeric',\n    minute: '2-digit',\n    hour12: true,\n    timeZone: 'America/Los_Angeles'\n  });\n  // Format the date part as \"Feb 13 2024\"\n  const dateString = date.toLocaleString('en-US', {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric',\n    timeZone: 'America/Los_Angeles'\n  });\n  // Concatenate the time and date strings\n  const formattedDate = `${timeString} ${dateString}`;\n  return formattedDate;\n}\nexport const sortData = (data, sortingCriteria) => {\n  const {\n    sortBy,\n    sortOrder\n  } = sortingCriteria;\n  const sortedData = [...data];\n  sortedData.sort((a, b) => {\n    const valueA = a[sortBy];\n    const valueB = b[sortBy];\n    if (valueA < valueB) {\n      return sortOrder === \"ASC\" ? -1 : 1;\n    }\n    if (valueA > valueB) {\n      return sortOrder === \"ASC\" ? 1 : -1;\n    }\n    return 0;\n  });\n  return sortedData;\n};\nexport const transformOptions = (optionsDownloaded, isDownloaded) => {\n  if (isDownloaded === true) {\n    const formatOptions = Object.entries(optionsDownloaded).filter(([key, value]) => value).map(([key]) => key.toUpperCase()).join(\" | \");\n    return formatOptions ? `Yes (${formatOptions})` : \"No\";\n  }\n  return \"No\";\n};\nexport const transformCustomIconsCreated = customValue => {\n  if (typeof customValue === 'object') {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Prompt:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 16\n        }, this), \" \", customValue.title || \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this), \" \", customValue.styleCategory || \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Sub_Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this), \" \", customValue.styleSubCategory || \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Colors:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 16\n        }, this), \" \", Array.isArray(customValue.colors) ? customValue.colors.join(\", \") : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this);\n  }\n  return String(customValue);\n};\n\n//   const renderData = (rowData: any, index: number) => {\n//     const transformValue = (value: any, key: string): string => {\n\n//        if (Array.isArray(value)) {\n//         return value.join(\", \");\n//       } else if (key === \"createdAt\") {\n//         return convertDateToPST(value);\n//       } else if (key === \"isDownloaded\") {\n//         return value;\n//       }\n//        else {\n//         return String(value);\n//       }\n//     };\n\n//     return (\n//       <tr key={index}>\n//         {columns.map((column) => (\n//           <td key={column.key}>{transformValue(rowData[column.key], column.key)}</td>\n//         ))}\n//       </tr>\n//     );\n//   };\n\n// const renderData = (rowData: any, index: number) => {\n//   const transformBoolean = (value: any): string => {\n//     if (typeof value === \"boolean\") {\n//       return value ? \"Yes\" : \"No\";\n//     }\n//     return value;\n//   };\n\n//   return (\n//     <tr key={index}>\n//       {columns.map((column) => (\n//         <td key={column.key}>{transformBoolean(rowData[column.key])}</td>\n//       ))}\n//     </tr>\n//   );\n// };","map":{"version":3,"names":["Fragment","jsxDEV","_jsxDEV","convertDateToPST","createdAt","date","Date","timeString","toLocaleString","hour","minute","hour12","timeZone","dateString","month","day","year","formattedDate","sortData","data","sortingCriteria","sortBy","sortOrder","sortedData","sort","a","b","valueA","valueB","transformOptions","optionsDownloaded","isDownloaded","formatOptions","Object","entries","filter","key","value","map","toUpperCase","join","transformCustomIconsCreated","customValue","children","fileName","_jsxFileName","lineNumber","columnNumber","title","styleCategory","styleSubCategory","Array","isArray","colors","String"],"sources":["E:/BizTecno/slide-fe-service/src/containers/PngSvgReports/utils.tsx"],"sourcesContent":["import { Fragment, useMemo } from \"react\";\n\nexport function convertDateToPST(createdAt: string) {\nconst date = new Date(createdAt);\n  // Format the time part as \"10:46AM\"\n  const timeString = date.toLocaleString('en-US', { hour: 'numeric', minute: '2-digit', hour12: true, timeZone: 'America/Los_Angeles' });\n  // Format the date part as \"Feb 13 2024\"\n  const dateString = date.toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric', timeZone: 'America/Los_Angeles' });\n  // Concatenate the time and date strings\n  const formattedDate = `${timeString} ${dateString}`;\n\n  return formattedDate;\n}\n\nexport const sortData = (data: any[] , sortingCriteria:any) => {\n    const { sortBy, sortOrder } = sortingCriteria;\n    const sortedData = [...data];\n\n    sortedData.sort((a, b) => {\n      const valueA = a[sortBy];\n      const valueB = b[sortBy];\n\n      if (valueA < valueB) {\n        return sortOrder === \"ASC\" ? -1 : 1;\n      }\n      if (valueA > valueB) {\n        return sortOrder === \"ASC\" ? 1 : -1;\n      }\n      return 0;\n    });\n\n    return sortedData;\n  };\n\nexport const transformOptions = (optionsDownloaded:any, isDownloaded:any) => {\n    if (isDownloaded === true) {\n      const formatOptions = Object.entries(optionsDownloaded)\n        .filter(([key, value]) => value)\n        .map(([key]) => key.toUpperCase())\n        .join(\" | \");\n  \n      return formatOptions ? `Yes (${formatOptions})` : \"No\";\n    }\n  \n    return \"No\";\n  };\n\n\n  export const transformCustomIconsCreated = (customValue: any) => {\n    if (typeof customValue === 'object') {\n      return (\n        <Fragment>\n          <div><strong>Prompt:</strong> {customValue.title || \"\"}</div>\n          <div><strong>Category:</strong> {customValue.styleCategory || \"\"}</div>\n          <div><strong>Sub_Category:</strong> {customValue.styleSubCategory || \"\"}</div>\n          <div><strong>Colors:</strong> { Array.isArray(customValue.colors) ? customValue.colors.join(\", \") : \"\"}</div>\n        </Fragment>\n      );\n    }\n    return String(customValue);\n  };\n\n//   const renderData = (rowData: any, index: number) => {\n//     const transformValue = (value: any, key: string): string => {\n     \n//        if (Array.isArray(value)) {\n//         return value.join(\", \");\n//       } else if (key === \"createdAt\") {\n//         return convertDateToPST(value);\n//       } else if (key === \"isDownloaded\") {\n//         return value;\n//       }\n//        else {\n//         return String(value);\n//       }\n//     };\n  \n//     return (\n//       <tr key={index}>\n//         {columns.map((column) => (\n//           <td key={column.key}>{transformValue(rowData[column.key], column.key)}</td>\n//         ))}\n//       </tr>\n//     );\n//   };\n\n  // const renderData = (rowData: any, index: number) => {\n  //   const transformBoolean = (value: any): string => {\n  //     if (typeof value === \"boolean\") {\n  //       return value ? \"Yes\" : \"No\";\n  //     }\n  //     return value;\n  //   };\n\n  //   return (\n  //     <tr key={index}>\n  //       {columns.map((column) => (\n  //         <td key={column.key}>{transformBoolean(rowData[column.key])}</td>\n  //       ))}\n  //     </tr>\n  //   );\n  // };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}