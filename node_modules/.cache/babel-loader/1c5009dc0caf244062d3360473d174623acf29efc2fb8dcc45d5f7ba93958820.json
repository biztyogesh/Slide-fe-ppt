{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["E:/BizTecno/slide-fe-service/src/store/baseProvider/rext/interface.ts"],"sourcesContent":["import { Reducer, Action } from 'redux';\nimport { RequestType } from '../../common';\n\nexport interface ActionIdentity {\n  REXT_FETCH: RequestType;\n  REXT_UPDATE: RequestType;\n  REXT_MULTI_FETCH: RequestType;\n  REXT_MULTI_UPDATE_FETCH: RequestType;\n  RESET_UPDATE_STATE: string;\n}\n\nexport type IRextActionDefinition = (\n  params: IRextParams,\n  overrideMetsKeys?: IOverrideRextKeys,\n  resources?: any,\n) => IRextAction;\nexport type IRextResetActionDefinition = () => IRextAction;\nexport type IRextMultiActionDefinition = (\n  params: IRextParams[],\n  resources?: any,\n) => IRextAction;\n\nexport interface IRextActionCreators {\n  request: IRextActionDefinition;\n  update: IRextActionDefinition;\n  multiRequest: IRextMultiActionDefinition;\n  multiUpdate: IRextMultiActionDefinition;\n  resetUpdate: IRextResetActionDefinition;\n}\n\nexport interface IRextMeta {\n  uniqueKey?: string;\n  keys: IRextKeys;\n  actions: RequestType;\n}\nexport interface IRextKeys {\n  identity: string;\n  transformation?: any;\n  getBaseUrl: (state: any) => string;\n  getToken: (state: any) => string;\n  getXAPIToken?: (state: any) => string;\n  maintainOldValues?: boolean;\n}\n\nexport interface IOverrideRextKeys {\n  transformation?: any;\n}\n\nexport interface IRextParams {\n  url: string;\n  method: 'get' | 'post' | 'put' | 'delete';\n  queryParams?: { [key: string]: string | number | boolean };\n  urlParams?: { [key: string]: string | number };\n  body?: any;\n  headers?: Headers;\n  multiIdentity?: string;\n}\nexport interface IRextAction extends Action {\n  meta: IRextMeta;\n  payload: {\n    params?: IRextParams | IRextParams[];\n    resources?: any;\n    items?: any;\n    message?: string;\n    error?: boolean;\n  };\n}\n/**\n * Reducers\n */\nexport interface IRextInfo {\n  params?: IRextParams | IRextParams[];\n  fetching?: boolean;\n  isUpdated?: boolean;\n  hasError?: boolean;\n  message?: string;\n  isCancelled: boolean;\n}\n\nexport interface RextResourcesReducer {\n  [key: string]: any;\n}\n\nexport interface IRextReducer {\n  info: IRextInfo;\n  resources: any;\n  items: any;\n}\nexport interface IRext extends IRextActionCreators {\n  reducers: Reducer<IRextReducer, IRextAction>;\n  saga: any;\n}\n/**\n * Selector\n */\nexport interface IRextState {\n  params: IRextParams | IRextParams[];\n\n  fetching?: boolean;\n  isUpdated?: boolean;\n\n  resources: any;\n  data: any;\n\n  error: boolean;\n  message: string;\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}