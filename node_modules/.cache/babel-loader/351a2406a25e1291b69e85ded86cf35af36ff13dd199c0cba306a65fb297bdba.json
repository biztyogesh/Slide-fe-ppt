{"ast":null,"code":"import { defineRequestType } from '../../common';\nexport function createIdentityAction(identity) {\n  return {\n    REXT_FETCH: defineRequestType(`@${identity}CUSTOM_REDUX_REXT_FETCH`),\n    REXT_UPDATE: defineRequestType(`@${identity}CUSTOM_REDUX_REXT_UPDATE`),\n    REXT_MULTI_FETCH: defineRequestType(`@${identity}CUSTOM_REDUX_REXT_MULTI_FETCH`),\n    REXT_MULTI_UPDATE_FETCH: defineRequestType(`@${identity}CUSTOM_REDUX_REXT_MULTI_UPDATE_FETCH`),\n    RESET_UPDATE_STATE: `@${identity}CUSTOM_REDUX_REXT_RESET_UPDATE`\n  };\n}\nexport const rextActionFunctions = {\n  request: (meta, params, resources) => {\n    const {\n      actions\n    } = meta;\n    return {\n      type: actions.REQUEST,\n      meta,\n      payload: {\n        params,\n        resources\n      }\n    };\n  },\n  success: (meta, params, items, message) => {\n    const {\n      actions\n    } = meta;\n    return {\n      type: actions.SUCCESS,\n      meta,\n      payload: {\n        params,\n        items,\n        message\n      }\n    };\n  },\n  failure: (meta, params, message) => {\n    const {\n      actions\n    } = meta;\n    return {\n      type: actions.FAILURE,\n      meta,\n      payload: {\n        params,\n        message\n      }\n    };\n  }\n};\nexport function resetUpdateAction(identity, meta) {\n  return {\n    type: identity,\n    meta,\n    payload: {}\n  };\n}","map":{"version":3,"names":["defineRequestType","createIdentityAction","identity","REXT_FETCH","REXT_UPDATE","REXT_MULTI_FETCH","REXT_MULTI_UPDATE_FETCH","RESET_UPDATE_STATE","rextActionFunctions","request","meta","params","resources","actions","type","REQUEST","payload","success","items","message","SUCCESS","failure","FAILURE","resetUpdateAction"],"sources":["E:/BizTecno/slide-fe-service/src/store/baseProvider/rext/actions.ts"],"sourcesContent":["import {\n  IRextParams,\n  ActionIdentity,\n  IRextAction,\n  IRextMeta,\n} from './interface';\nimport { defineRequestType } from '../../common';\n\nexport function createIdentityAction(identity: string): ActionIdentity {\n  return {\n    REXT_FETCH: defineRequestType(`@${identity}CUSTOM_REDUX_REXT_FETCH`),\n    REXT_UPDATE: defineRequestType(`@${identity}CUSTOM_REDUX_REXT_UPDATE`),\n    REXT_MULTI_FETCH: defineRequestType(\n      `@${identity}CUSTOM_REDUX_REXT_MULTI_FETCH`,\n    ),\n    REXT_MULTI_UPDATE_FETCH: defineRequestType(\n      `@${identity}CUSTOM_REDUX_REXT_MULTI_UPDATE_FETCH`,\n    ),\n    RESET_UPDATE_STATE: `@${identity}CUSTOM_REDUX_REXT_RESET_UPDATE`,\n  };\n}\n\nexport const rextActionFunctions = {\n  request: (\n    meta: IRextMeta,\n    params: IRextParams | IRextParams[],\n    resources?: any,\n  ): IRextAction => {\n    const { actions } = meta;\n    return {\n      type: actions.REQUEST,\n      meta,\n      payload: {\n        params,\n        resources,\n      },\n    };\n  },\n  success: (\n    meta: IRextMeta,\n    params: IRextParams | IRextParams[],\n    items: any,\n    message: string,\n  ): IRextAction => {\n    const { actions } = meta;\n    return {\n      type: actions.SUCCESS,\n      meta,\n      payload: {\n        params,\n        items,\n        message,\n      },\n    };\n  },\n  failure: (\n    meta: IRextMeta,\n    params: IRextParams | IRextParams[],\n    message: string,\n  ): IRextAction => {\n    const { actions } = meta;\n    return {\n      type: actions.FAILURE,\n      meta,\n      payload: {\n        params,\n        message,\n      },\n    };\n  },\n};\n\nexport function resetUpdateAction(\n  identity: string,\n  meta: IRextMeta,\n): IRextAction {\n  return {\n    type: identity,\n    meta,\n    payload: {},\n  };\n}\n"],"mappings":"AAMA,SAASA,iBAAiB,QAAQ,cAAc;AAEhD,OAAO,SAASC,oBAAoBA,CAACC,QAAgB,EAAkB;EACrE,OAAO;IACLC,UAAU,EAAEH,iBAAiB,CAAE,IAAGE,QAAS,yBAAwB,CAAC;IACpEE,WAAW,EAAEJ,iBAAiB,CAAE,IAAGE,QAAS,0BAAyB,CAAC;IACtEG,gBAAgB,EAAEL,iBAAiB,CAChC,IAAGE,QAAS,+BACf,CAAC;IACDI,uBAAuB,EAAEN,iBAAiB,CACvC,IAAGE,QAAS,sCACf,CAAC;IACDK,kBAAkB,EAAG,IAAGL,QAAS;EACnC,CAAC;AACH;AAEA,OAAO,MAAMM,mBAAmB,GAAG;EACjCC,OAAO,EAAEA,CACPC,IAAe,EACfC,MAAmC,EACnCC,SAAe,KACC;IAChB,MAAM;MAAEC;IAAQ,CAAC,GAAGH,IAAI;IACxB,OAAO;MACLI,IAAI,EAAED,OAAO,CAACE,OAAO;MACrBL,IAAI;MACJM,OAAO,EAAE;QACPL,MAAM;QACNC;MACF;IACF,CAAC;EACH,CAAC;EACDK,OAAO,EAAEA,CACPP,IAAe,EACfC,MAAmC,EACnCO,KAAU,EACVC,OAAe,KACC;IAChB,MAAM;MAAEN;IAAQ,CAAC,GAAGH,IAAI;IACxB,OAAO;MACLI,IAAI,EAAED,OAAO,CAACO,OAAO;MACrBV,IAAI;MACJM,OAAO,EAAE;QACPL,MAAM;QACNO,KAAK;QACLC;MACF;IACF,CAAC;EACH,CAAC;EACDE,OAAO,EAAEA,CACPX,IAAe,EACfC,MAAmC,EACnCQ,OAAe,KACC;IAChB,MAAM;MAAEN;IAAQ,CAAC,GAAGH,IAAI;IACxB,OAAO;MACLI,IAAI,EAAED,OAAO,CAACS,OAAO;MACrBZ,IAAI;MACJM,OAAO,EAAE;QACPL,MAAM;QACNQ;MACF;IACF,CAAC;EACH;AACF,CAAC;AAED,OAAO,SAASI,iBAAiBA,CAC/BrB,QAAgB,EAChBQ,IAAe,EACF;EACb,OAAO;IACLI,IAAI,EAAEZ,QAAQ;IACdQ,IAAI;IACJM,OAAO,EAAE,CAAC;EACZ,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}