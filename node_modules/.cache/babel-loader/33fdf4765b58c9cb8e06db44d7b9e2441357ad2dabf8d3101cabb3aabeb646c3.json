{"ast":null,"code":"var _jsxFileName = \"E:\\\\BizTecno\\\\slide-fe-service\\\\src\\\\containers\\\\TemplateContainer\\\\TemplateForm\\\\TemplateForm.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createTemplates, requestTemplateDetail, updateTemplate } from \"store/rext/action\";\nimport { getTemplateFormData } from \"store/selectors\";\nimport { useForm } from \"react-hook-form\";\nimport { HookFormInput } from \"components/FormInputs\";\nimport CustomButton, { ICON_POSITION } from \"components/CustomButton/CustomButton\";\nimport { SVGType } from \"components/SvgIcon\";\nimport { hookformRequired } from \"utils/FormValidations\";\nimport Loading from \"components/Loading\";\nimport DefaultColorPalleteForm from \"./DefaultColorPalleteForm\";\nimport ColorPalletsForm from \"./ColorPalletsForm\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst requiredValidation = {\n  ...hookformRequired(\"Required\")\n};\nexport const DEFAULT_VALUE = {\n  name: \"\",\n  templateTypeId: \"\"\n};\nfunction TemplateForm() {\n  _s();\n  const {\n    templateId,\n    templateTypeId\n  } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    data: templateDetail,\n    fetching: templateFetching\n  } = useSelector(getTemplateFormData);\n  const {\n    handleSubmit,\n    formState: {\n      errors\n    },\n    control,\n    reset\n  } = useForm({\n    defaultValues: useMemo(() => {\n      return templateDetail || DEFAULT_VALUE;\n    }, [templateDetail])\n  });\n  useEffect(() => {\n    if (templateId) {\n      dispatch(requestTemplateDetail({\n        templateId\n      }));\n    }\n  }, [templateId, dispatch]);\n  const handleOnSubmit = data => {\n    const transformedData = {\n      name: data.name,\n      staticImageDir: data.staticImageDir,\n      templateTypeId: templateDetail.templateTypeId || templateTypeId,\n      defaultColorPallete: data.defaultColorPallete,\n      colorPalletes: data.colorPalletes\n    };\n    // console.log(data, transformedData, templateDetail);\n    if (templateId) {\n      dispatch(updateTemplate({\n        templateId\n      }, transformedData));\n    } else {\n      dispatch(createTemplates(transformedData));\n    }\n  };\n  useEffect(() => {\n    if (templateId) {\n      reset(templateDetail);\n    } else {\n      reset(DEFAULT_VALUE);\n    }\n  }, [reset, templateId, templateDetail]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"height-100\",\n    children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n      primaryButton: true,\n      type: \"button\",\n      handleClick: () => navigate(-1),\n      iconProps: {\n        name: \"arrow left\",\n        svgType: SVGType.SEMANTIC,\n        size: \"large\",\n        baseclassname: \"text-default-color\"\n      },\n      iconPosition: ICON_POSITION.RIGHT,\n      transparent: true,\n      noOutline: true,\n      baseclassname: \"cursor-pointer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), templateFetching && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 28\n    }, this), !templateFetching && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row flex-justify-center height-85\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(handleOnSubmit),\n        className: \" margin-3 width-80 background-white-shade-1 templateform-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-6 text-bold margin-4\",\n          children: templateId ? \"Update Template\" : \"Create Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"padding-l-4 padding-r-4 height-70 width-100 overflow-auto\",\n          children: [/*#__PURE__*/_jsxDEV(HookFormInput, {\n            name: \"name\",\n            id: \"name\",\n            label: \"Name\",\n            control: control,\n            errors: errors,\n            validation: requiredValidation,\n            baseClassName: \"width-50 margin-l-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(HookFormInput, {\n            name: \"staticImageDir\",\n            id: \"staticImageDir\",\n            label: \"Static Image Directory\",\n            control: control,\n            errors: errors,\n            validation: requiredValidation,\n            baseClassName: \"width-50 margin-l-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DefaultColorPalleteForm, {\n            label: \"Default Color Pallete\",\n            name: \"defaultColorPallete\",\n            control: control,\n            errors: errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ColorPalletsForm, {\n            label: \"Color Palletes\",\n            name: \"colorPalletes\",\n            control: control,\n            errors: errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row flex-justify-center flex-align-center margin-t-4\",\n          children: /*#__PURE__*/_jsxDEV(CustomButton, {\n            buttonText: templateId ? \"Update\" : \"Create\",\n            type: \"submit\",\n            primaryButton: true,\n            round: true,\n            baseclassname: \"cursor-pointer padding-2 margin-l-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(TemplateForm, \"g+UXvFb/srycDFaRP6AawZQDxl0=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSelector, useForm];\n});\n_c = TemplateForm;\nexport default TemplateForm;\nvar _c;\n$RefreshReg$(_c, \"TemplateForm\");","map":{"version":3,"names":["useEffect","useMemo","useNavigate","useParams","useDispatch","useSelector","createTemplates","requestTemplateDetail","updateTemplate","getTemplateFormData","useForm","HookFormInput","CustomButton","ICON_POSITION","SVGType","hookformRequired","Loading","DefaultColorPalleteForm","ColorPalletsForm","jsxDEV","_jsxDEV","requiredValidation","DEFAULT_VALUE","name","templateTypeId","TemplateForm","_s","templateId","navigate","dispatch","data","templateDetail","fetching","templateFetching","handleSubmit","formState","errors","control","reset","defaultValues","handleOnSubmit","transformedData","staticImageDir","defaultColorPallete","colorPalletes","className","children","primaryButton","type","handleClick","iconProps","svgType","SEMANTIC","size","baseclassname","iconPosition","RIGHT","transparent","noOutline","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","label","validation","baseClassName","buttonText","round","_c","$RefreshReg$"],"sources":["E:/BizTecno/slide-fe-service/src/containers/TemplateContainer/TemplateForm/TemplateForm.tsx"],"sourcesContent":["import { useEffect, useMemo } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createTemplates,\n  requestTemplateDetail,\n  updateTemplate,\n} from \"store/rext/action\";\nimport { getTemplateFormData } from \"store/selectors\";\nimport { useForm } from \"react-hook-form\";\nimport { HookFormInput } from \"components/FormInputs\";\nimport CustomButton, {\n  ICON_POSITION,\n} from \"components/CustomButton/CustomButton\";\nimport { SVGType } from \"components/SvgIcon\";\nimport { hookformRequired } from \"utils/FormValidations\";\nimport Loading from \"components/Loading\";\nimport DefaultColorPalleteForm from \"./DefaultColorPalleteForm\";\nimport ColorPalletsForm from \"./ColorPalletsForm\";\n\nimport \"./style.scss\";\n\nconst requiredValidation = {\n  ...hookformRequired(\"Required\"),\n};\n\ninterface ITemplateForm {\n  name: string;\n  templateTypeId: string;\n}\n\nexport const DEFAULT_VALUE: ITemplateForm = {\n  name: \"\",\n  templateTypeId: \"\",\n};\n\nfunction TemplateForm() {\n  const { templateId, templateTypeId } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { data: templateDetail, fetching: templateFetching } =\n    useSelector(getTemplateFormData);\n\n  const {\n    handleSubmit,\n    formState: { errors },\n    control,\n    reset,\n  } = useForm({\n    defaultValues: useMemo(() => {\n      return templateDetail || DEFAULT_VALUE;\n    }, [templateDetail]),\n  });\n\n  useEffect(() => {\n    if (templateId) {\n      dispatch(requestTemplateDetail({ templateId }));\n    }\n  }, [templateId, dispatch]);\n\n  const handleOnSubmit = (data: any) => {\n    const transformedData = {\n      name: data.name,\n      staticImageDir: data.staticImageDir,\n      templateTypeId: templateDetail.templateTypeId || templateTypeId,\n      defaultColorPallete: data.defaultColorPallete,\n      colorPalletes: data.colorPalletes,\n    };\n    // console.log(data, transformedData, templateDetail);\n    if (templateId) {\n      dispatch(updateTemplate({ templateId }, transformedData));\n    } else {\n      dispatch(createTemplates(transformedData));\n    }\n  };\n\n  useEffect(() => {\n    if (templateId) {\n      reset(templateDetail);\n    } else {\n      reset(DEFAULT_VALUE);\n    }\n  }, [reset, templateId, templateDetail]);\n\n  return (\n    <div className=\"height-100\">\n      <CustomButton\n        primaryButton\n        type=\"button\"\n        handleClick={() => navigate(-1)}\n        iconProps={{\n          name: \"arrow left\",\n          svgType: SVGType.SEMANTIC,\n          size: \"large\",\n          baseclassname: \"text-default-color\",\n        }}\n        iconPosition={ICON_POSITION.RIGHT}\n        transparent\n        noOutline\n        baseclassname={\"cursor-pointer\"}\n      />\n      {templateFetching && <Loading />}\n      {!templateFetching && (\n        <div className=\"flex flex-row flex-justify-center height-85\">\n          <form\n            onSubmit={handleSubmit(handleOnSubmit)}\n            className=\" margin-3 width-80 background-white-shade-1 templateform-container\"\n          >\n            <div className=\"text-6 text-bold margin-4\">\n              {templateId ? \"Update Template\" : \"Create Template\"}\n            </div>\n            <div className=\"padding-l-4 padding-r-4 height-70 width-100 overflow-auto\">\n              <HookFormInput\n                name=\"name\"\n                id=\"name\"\n                label=\"Name\"\n                control={control}\n                errors={errors}\n                validation={requiredValidation}\n                baseClassName=\"width-50 margin-l-4\"\n              />\n              <HookFormInput\n                name=\"staticImageDir\"\n                id=\"staticImageDir\"\n                label=\"Static Image Directory\"\n                control={control}\n                errors={errors}\n                validation={requiredValidation}\n                baseClassName=\"width-50 margin-l-4\"\n              />\n              <DefaultColorPalleteForm\n                label=\"Default Color Pallete\"\n                name=\"defaultColorPallete\"\n                control={control}\n                errors={errors}\n              />\n              <ColorPalletsForm\n                label=\"Color Palletes\"\n                name=\"colorPalletes\"\n                control={control}\n                errors={errors}\n              />\n            </div>\n            <div className=\"flex flex-row flex-justify-center flex-align-center margin-t-4\">\n              <CustomButton\n                buttonText={templateId ? \"Update\" : \"Create\"}\n                type=\"submit\"\n                primaryButton\n                round\n                baseclassname={\"cursor-pointer padding-2 margin-l-3\"}\n              />\n            </div>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TemplateForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}