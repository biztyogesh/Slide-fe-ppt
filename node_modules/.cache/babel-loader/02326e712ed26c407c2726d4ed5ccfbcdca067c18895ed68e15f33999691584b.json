{"ast":null,"code":"import { put, call, select, takeLatest } from 'redux-saga/effects';\nimport { AUTH_ACTION, CURRENT_USER_ACTION } from '../actions';\nimport { fetchRequest } from 'Api';\nimport { getBaseUrl, getToken } from 'store/selectors';\nimport { URLRoutes } from 'URLRoutes';\nfunction* performRequestLogin(action) {\n  const {\n    payload\n  } = action;\n  try {\n    const token = yield select(getToken);\n    const baseUrl = yield select(getBaseUrl);\n    const response = yield call(fetchRequest, `${baseUrl}${URLRoutes.server.login}`, token, \"post\", payload);\n    const userToken = `Bearer ${response.token}`;\n    localStorage.setItem(\"token\", userToken);\n    const responseUser = yield call(fetchRequest, `${baseUrl}${URLRoutes.server.currentuser}`, userToken, \"get\");\n    yield put({\n      type: AUTH_ACTION.SUCCESS,\n      payload: {\n        user: responseUser.data,\n        token: userToken\n      }\n    });\n  } catch (error) {\n    const message = error.message || error.errorText || error;\n    yield put({\n      type: AUTH_ACTION.FAILURE,\n      payload: message\n    });\n  }\n}\nfunction* performCurrentUserDetail(action) {\n  try {\n    const token = yield select(getToken);\n    const baseUrl = yield select(getBaseUrl);\n    const response = yield call(fetchRequest, `${baseUrl}${URLRoutes.server.currentuser}`, token, \"get\");\n    yield put({\n      type: CURRENT_USER_ACTION.SUCCESS,\n      payload: {\n        user: response.data\n      }\n    });\n  } catch (error) {\n    const message = error.message || error.errorText || error;\n    yield put({\n      type: CURRENT_USER_ACTION.FAILURE,\n      payload: message\n    });\n  }\n}\nexport function* watchAuthEvent() {\n  yield takeLatest(AUTH_ACTION.REQUEST, performRequestLogin);\n  yield takeLatest(CURRENT_USER_ACTION.REQUEST, performCurrentUserDetail);\n}\n;","map":{"version":3,"names":["put","call","select","takeLatest","AUTH_ACTION","CURRENT_USER_ACTION","fetchRequest","getBaseUrl","getToken","URLRoutes","performRequestLogin","action","payload","token","baseUrl","response","server","login","userToken","localStorage","setItem","responseUser","currentuser","type","SUCCESS","user","data","error","message","errorText","FAILURE","performCurrentUserDetail","watchAuthEvent","REQUEST"],"sources":["E:/BizTecno/slide-fe-service/src/store/saga/auth.ts"],"sourcesContent":["import { SagaIterator } from 'redux-saga';\nimport { put, call, select, takeLatest } from 'redux-saga/effects';\nimport { AUTH_ACTION, CURRENT_USER_ACTION } from '../actions';\nimport { fetchRequest } from 'Api';\nimport { getBaseUrl, getToken } from 'store/selectors';\nimport { StandardAction } from 'store/common';\nimport { URLRoutes } from 'URLRoutes';\n\nfunction* performRequestLogin(\n  action: StandardAction\n): IterableIterator<{}> {\n  const { payload } = action;\n\n  try {\n    const token: string = (yield select(getToken))!;\n    const baseUrl: string = (yield select(getBaseUrl))!;\n    const response: any = yield call(\n      fetchRequest,\n      `${baseUrl}${URLRoutes.server.login}`,\n      token,\n      \"post\",\n      payload\n    );\n    const userToken = `Bearer ${response.token}`\n    localStorage.setItem(\"token\", userToken);\n\n    const responseUser: any = yield call(\n      fetchRequest,\n      `${baseUrl}${URLRoutes.server.currentuser}`,\n      userToken,\n      \"get\"\n    );\n\n    yield put({type: AUTH_ACTION.SUCCESS, payload: {user: responseUser.data, token: userToken}});\n  } catch (error: any) {\n    const message = error.message || error.errorText || error;\n    yield put({type: AUTH_ACTION.FAILURE, payload: message});\n  }\n}\n\nfunction* performCurrentUserDetail(\n  action: StandardAction\n): IterableIterator<{}> {\n  try {\n    const token: string = (yield select(getToken))!;\n    const baseUrl: string = (yield select(getBaseUrl))!;\n    const response: any = yield call(\n      fetchRequest,\n      `${baseUrl}${URLRoutes.server.currentuser}`,\n      token,\n      \"get\"\n    );\n    yield put({type: CURRENT_USER_ACTION.SUCCESS, payload: {user: response.data}});\n  } catch (error: any) {\n    const message = error.message || error.errorText || error;\n    yield put({type: CURRENT_USER_ACTION.FAILURE, payload: message});\n  }\n}\n\nexport function* watchAuthEvent(): SagaIterator {\n  yield takeLatest(\n    AUTH_ACTION.REQUEST,\n    performRequestLogin,\n  );\n  yield takeLatest(\n    CURRENT_USER_ACTION.REQUEST,\n    performCurrentUserDetail,\n  );\n};\n"],"mappings":"AACA,SAASA,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,UAAU,QAAQ,oBAAoB;AAClE,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,YAAY;AAC7D,SAASC,YAAY,QAAQ,KAAK;AAClC,SAASC,UAAU,EAAEC,QAAQ,QAAQ,iBAAiB;AAEtD,SAASC,SAAS,QAAQ,WAAW;AAErC,UAAUC,mBAAmBA,CAC3BC,MAAsB,EACA;EACtB,MAAM;IAAEC;EAAQ,CAAC,GAAGD,MAAM;EAE1B,IAAI;IACF,MAAME,KAAa,GAAI,MAAMX,MAAM,CAACM,QAAQ,CAAG;IAC/C,MAAMM,OAAe,GAAI,MAAMZ,MAAM,CAACK,UAAU,CAAG;IACnD,MAAMQ,QAAa,GAAG,MAAMd,IAAI,CAC9BK,YAAY,EACX,GAAEQ,OAAQ,GAAEL,SAAS,CAACO,MAAM,CAACC,KAAM,EAAC,EACrCJ,KAAK,EACL,MAAM,EACND,OACF,CAAC;IACD,MAAMM,SAAS,GAAI,UAASH,QAAQ,CAACF,KAAM,EAAC;IAC5CM,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,SAAS,CAAC;IAExC,MAAMG,YAAiB,GAAG,MAAMpB,IAAI,CAClCK,YAAY,EACX,GAAEQ,OAAQ,GAAEL,SAAS,CAACO,MAAM,CAACM,WAAY,EAAC,EAC3CJ,SAAS,EACT,KACF,CAAC;IAED,MAAMlB,GAAG,CAAC;MAACuB,IAAI,EAAEnB,WAAW,CAACoB,OAAO;MAAEZ,OAAO,EAAE;QAACa,IAAI,EAAEJ,YAAY,CAACK,IAAI;QAAEb,KAAK,EAAEK;MAAS;IAAC,CAAC,CAAC;EAC9F,CAAC,CAAC,OAAOS,KAAU,EAAE;IACnB,MAAMC,OAAO,GAAGD,KAAK,CAACC,OAAO,IAAID,KAAK,CAACE,SAAS,IAAIF,KAAK;IACzD,MAAM3B,GAAG,CAAC;MAACuB,IAAI,EAAEnB,WAAW,CAAC0B,OAAO;MAAElB,OAAO,EAAEgB;IAAO,CAAC,CAAC;EAC1D;AACF;AAEA,UAAUG,wBAAwBA,CAChCpB,MAAsB,EACA;EACtB,IAAI;IACF,MAAME,KAAa,GAAI,MAAMX,MAAM,CAACM,QAAQ,CAAG;IAC/C,MAAMM,OAAe,GAAI,MAAMZ,MAAM,CAACK,UAAU,CAAG;IACnD,MAAMQ,QAAa,GAAG,MAAMd,IAAI,CAC9BK,YAAY,EACX,GAAEQ,OAAQ,GAAEL,SAAS,CAACO,MAAM,CAACM,WAAY,EAAC,EAC3CT,KAAK,EACL,KACF,CAAC;IACD,MAAMb,GAAG,CAAC;MAACuB,IAAI,EAAElB,mBAAmB,CAACmB,OAAO;MAAEZ,OAAO,EAAE;QAACa,IAAI,EAAEV,QAAQ,CAACW;MAAI;IAAC,CAAC,CAAC;EAChF,CAAC,CAAC,OAAOC,KAAU,EAAE;IACnB,MAAMC,OAAO,GAAGD,KAAK,CAACC,OAAO,IAAID,KAAK,CAACE,SAAS,IAAIF,KAAK;IACzD,MAAM3B,GAAG,CAAC;MAACuB,IAAI,EAAElB,mBAAmB,CAACyB,OAAO;MAAElB,OAAO,EAAEgB;IAAO,CAAC,CAAC;EAClE;AACF;AAEA,OAAO,UAAUI,cAAcA,CAAA,EAAiB;EAC9C,MAAM7B,UAAU,CACdC,WAAW,CAAC6B,OAAO,EACnBvB,mBACF,CAAC;EACD,MAAMP,UAAU,CACdE,mBAAmB,CAAC4B,OAAO,EAC3BF,wBACF,CAAC;AACH;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}