{"ast":null,"code":"const emailRegx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nconst passwordRegx = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,15}$/;\nexport const hookformRequired = message => {\n  return {\n    required: message || \"required\"\n  };\n};\nexport const hookMaxValue = (value, message) => {\n  return {\n    maxLength: {\n      value,\n      message: `Must be less than ${value}` || message\n    }\n  };\n};\nexport const hookMinValue = (value, message) => {\n  return {\n    maxLength: {\n      value,\n      message: `Must be greater than ${value}` || message\n    }\n  };\n};\nexport const hookPatternRequired = (pattern, message) => {\n  return {\n    pattern: {\n      value: pattern,\n      message: message || \"Enter Valid Data\"\n    }\n  };\n};","map":{"version":3,"names":["emailRegx","passwordRegx","hookformRequired","message","required","hookMaxValue","value","maxLength","hookMinValue","hookPatternRequired","pattern"],"sources":["E:/BizTecno/slide-fe-service/src/utils/FormValidations.tsx"],"sourcesContent":["const emailRegx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/ ;\nconst passwordRegx=/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,15}$/\n\n\n\nexport const hookformRequired = (message?:string) => {\n    return {\n        required : message || \"required\"\n    }\n}\n\nexport const hookMaxValue = (value?: number , message?:string) => {\n    return {\n        maxLength : {\n            value , \n            message:`Must be less than ${value}` || message\n        }\n    }\n}\nexport const hookMinValue = (value?: number , message?:string) => {\n    return {\n        maxLength : {\n            value , \n            message:`Must be greater than ${value}` || message\n        }\n    }\n}\nexport const hookPatternRequired = ( pattern:any , message?:string) => {\n    return {\n        pattern : {\n            value: pattern , \n            message: message || \"Enter Valid Data\"\n        }\n    }\n}"],"mappings":"AAAA,MAAMA,SAAS,GAAG,yJAAyJ;AAC3K,MAAMC,YAAY,GAAC,yCAAyC;AAI5D,OAAO,MAAMC,gBAAgB,GAAIC,OAAe,IAAK;EACjD,OAAO;IACHC,QAAQ,EAAGD,OAAO,IAAI;EAC1B,CAAC;AACL,CAAC;AAED,OAAO,MAAME,YAAY,GAAGA,CAACC,KAAc,EAAGH,OAAe,KAAK;EAC9D,OAAO;IACHI,SAAS,EAAG;MACRD,KAAK;MACLH,OAAO,EAAE,qBAAoBG,KAAM,EAAC,IAAIH;IAC5C;EACJ,CAAC;AACL,CAAC;AACD,OAAO,MAAMK,YAAY,GAAGA,CAACF,KAAc,EAAGH,OAAe,KAAK;EAC9D,OAAO;IACHI,SAAS,EAAG;MACRD,KAAK;MACLH,OAAO,EAAE,wBAAuBG,KAAM,EAAC,IAAIH;IAC/C;EACJ,CAAC;AACL,CAAC;AACD,OAAO,MAAMM,mBAAmB,GAAGA,CAAEC,OAAW,EAAGP,OAAe,KAAK;EACnE,OAAO;IACHO,OAAO,EAAG;MACNJ,KAAK,EAAEI,OAAO;MACdP,OAAO,EAAEA,OAAO,IAAI;IACxB;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}