{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './reducers';\nimport rootSaga from './saga';\nfunction createStore(preloadedState) {\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = getDefaultMiddleware => [sagaMiddleware];\n  const store = configureStore({\n    reducer: rootReducer(),\n    devTools: process.env.NODE_ENV !== 'production',\n    preloadedState,\n    middleware\n  });\n  sagaMiddleware.run(rootSaga);\n  return store;\n}\nexport default createStore;","map":{"version":3,"names":["configureStore","createSagaMiddleware","rootReducer","rootSaga","createStore","preloadedState","sagaMiddleware","middleware","getDefaultMiddleware","store","reducer","devTools","process","env","NODE_ENV","run"],"sources":["E:/BizTecno/slide-fe-service/src/store/index.ts"],"sourcesContent":["import { configureStore, Store } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer, { ApplicationState } from './reducers';\nimport rootSaga from './saga';\n\nfunction createStore(preloadedState: object): Store<ApplicationState> {\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = (getDefaultMiddleware: any) => [sagaMiddleware];\n  const store = configureStore({\n    reducer: rootReducer(),\n    devTools: process.env.NODE_ENV !== 'production',\n    preloadedState,\n    middleware,\n  });\n  sagaMiddleware.run(rootSaga);\n  return store;\n}\n\nexport default createStore;\n"],"mappings":"AAAA,SAASA,cAAc,QAAe,kBAAkB;AACxD,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,OAAOC,WAAW,MAA4B,YAAY;AAC1D,OAAOC,QAAQ,MAAM,QAAQ;AAE7B,SAASC,WAAWA,CAACC,cAAsB,EAA2B;EACpE,MAAMC,cAAc,GAAGL,oBAAoB,CAAC,CAAC;EAC7C,MAAMM,UAAU,GAAIC,oBAAyB,IAAK,CAACF,cAAc,CAAC;EAClE,MAAMG,KAAK,GAAGT,cAAc,CAAC;IAC3BU,OAAO,EAAER,WAAW,CAAC,CAAC;IACtBS,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;IAC/CT,cAAc;IACdE;EACF,CAAC,CAAC;EACFD,cAAc,CAACS,GAAG,CAACZ,QAAQ,CAAC;EAC5B,OAAOM,KAAK;AACd;AAEA,eAAeL,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}