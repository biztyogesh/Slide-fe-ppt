{"ast":null,"code":"var _jsxFileName = \"E:\\\\BizTecno\\\\slide-fe-service\\\\src\\\\containers\\\\PPTFactory\\\\TemplateTypeForm\\\\SuggestionPromptsForm.tsx\",\n  _s = $RefreshSig$();\nimport { HookFormTextarea } from \"components/FormInputs\";\nimport CustomButton from \"components/CustomButton\";\nimport { useFieldArray } from \"react-hook-form\";\nimport { CUSTOM_SVG_ICON, SVGType } from \"components/SvgIcon\";\nimport { ICON_POSITION } from \"components/CustomButton/CustomButton\";\nimport classNames from \"classnames\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SuggestionPromptsForm(props) {\n  _s();\n  const {\n    control,\n    errors,\n    name,\n    label\n  } = props;\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    name: name,\n    control\n  });\n  const handleAppendSuggestions = () => {\n    append(\"\");\n  };\n  const handleRemoveSuggestions = index => {\n    remove(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"width-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row margin-l-4\",\n      children: [label && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-4 text-bold\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"button\",\n        transparent: true,\n        primaryButton: true,\n        iconProps: {\n          name: CUSTOM_SVG_ICON.PlusCircle,\n          svgType: SVGType.CUSTOM,\n          size: \"small\",\n          baseclassname: \"text-secondary-color\"\n        },\n        noOutline: true,\n        iconPosition: ICON_POSITION.LEFT,\n        handleClick: handleAppendSuggestions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-column margin-l-4  width-100\",\n      children: fields.map((field, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames([\"flex flex-row width-75\"]),\n          children: [/*#__PURE__*/_jsxDEV(HookFormTextarea, {\n            control: control,\n            errors: errors,\n            validation: {},\n            rows: 3,\n            name: `${name}[${index}]`\n            // placeholder={`Suggestion ${index + 1}`}\n            ,\n            id: `${name}[${index}]`,\n            baseClassName: \"width-100 margin-l-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            transparent: true,\n            primaryButton: true,\n            iconProps: {\n              name: CUSTOM_SVG_ICON.Delete,\n              svgType: SVGType.CUSTOM,\n              size: \"huge\",\n              baseclassname: \"text-danger-color\"\n            },\n            noOutline: true,\n            iconPosition: ICON_POSITION.LEFT,\n            handleClick: () => handleRemoveSuggestions(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, field.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(SuggestionPromptsForm, \"ZUdpHmDLsHW29pYmVu7vZWnnIQg=\", false, function () {\n  return [useFieldArray];\n});\n_c = SuggestionPromptsForm;\nvar _c;\n$RefreshReg$(_c, \"SuggestionPromptsForm\");","map":{"version":3,"names":["HookFormTextarea","CustomButton","useFieldArray","CUSTOM_SVG_ICON","SVGType","ICON_POSITION","classNames","jsxDEV","_jsxDEV","SuggestionPromptsForm","props","_s","control","errors","name","label","fields","append","remove","handleAppendSuggestions","handleRemoveSuggestions","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","transparent","primaryButton","iconProps","PlusCircle","svgType","CUSTOM","size","baseclassname","noOutline","iconPosition","LEFT","handleClick","map","field","validation","rows","id","baseClassName","Delete","_c","$RefreshReg$"],"sources":["E:/BizTecno/slide-fe-service/src/containers/PPTFactory/TemplateTypeForm/SuggestionPromptsForm.tsx"],"sourcesContent":["import { HookFormInput, HookFormTextarea } from \"components/FormInputs\";\nimport CustomButton from \"components/CustomButton\";\nimport { useFieldArray } from \"react-hook-form\";\nimport { CUSTOM_SVG_ICON, SVGType } from \"components/SvgIcon\";\nimport { ICON_POSITION } from \"components/CustomButton/CustomButton\";\nimport classNames from \"classnames\";\nimport \"./style.scss\"\n\nexport function SuggestionPromptsForm(props: any) {\n  const { control, errors, name , label } = props;\n\n  const { fields, append, remove } = useFieldArray({\n    name: name,\n    control,\n  });\n\n  const handleAppendSuggestions = () => {\n    append(\"\"); \n  };\n\n  const handleRemoveSuggestions = (index: number) => {\n    remove(index);\n  };\n\n  return (\n    <div className=\"width-100\">\n      <div className=\"flex flex-row margin-l-4\">\n      {label && <div className=\"text-4 text-bold\">{label}</div>}\n      <CustomButton\n        type=\"button\"\n        transparent\n        primaryButton\n        iconProps={{\n          name: CUSTOM_SVG_ICON.PlusCircle,\n          svgType: SVGType.CUSTOM,\n          size: \"small\",\n          baseclassname: \"text-secondary-color\",\n        }}\n        noOutline\n        iconPosition={ICON_POSITION.LEFT}\n        handleClick={handleAppendSuggestions}\n      />\n      </div>\n      <div className=\"flex flex-column margin-l-4  width-100\">\n        {fields.map((field: any, index: number) => {\n          return (\n            <div key={field.id} className={classNames([\"flex flex-row width-75\"])}>\n              <HookFormTextarea\n                control={control}\n                errors={errors}\n                validation={{}}\n                rows={3}\n                name={`${name}[${index}]`}\n                // placeholder={`Suggestion ${index + 1}`}\n                id={`${name}[${index}]`}\n                baseClassName=\"width-100 margin-l-2\"\n              />\n              <CustomButton\n                type=\"button\"\n                transparent\n                primaryButton\n                iconProps={{\n                  name: CUSTOM_SVG_ICON.Delete,\n                  svgType: SVGType.CUSTOM,\n                  size: \"huge\",\n                  baseclassname: \"text-danger-color\",\n                }}\n                noOutline\n                iconPosition={ICON_POSITION.LEFT}\n                handleClick={() => handleRemoveSuggestions(index)}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}