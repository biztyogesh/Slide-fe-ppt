{"ast":null,"code":"var _jsxFileName = \"E:\\\\BizTecno\\\\slide-fe-service\\\\src\\\\containers\\\\SlidesContainer\\\\LayerForm.tsx\",\n  _s = $RefreshSig$();\nimport { forwardRef, useImperativeHandle, useRef, useState } from \"react\";\nimport { useFieldArray } from \"react-hook-form\";\nimport CustomButton, { ICON_POSITION } from \"components/CustomButton/CustomButton\";\nimport { CUSTOM_SVG_ICON, SVGType } from \"components/SvgIcon\";\nimport BaseLayerForm from \"./LayersForm/BaseLayerForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LayerForm(props, ref) {\n  _s();\n  const {\n    name,\n    control,\n    watch,\n    errors,\n    reset,\n    setValue,\n    defaultOptions\n  } = props;\n  const [expandedLayers, setExpandedLayers] = useState([]);\n  const layerFormRef = useRef(null);\n  const {\n    fields,\n    append,\n    remove,\n    move\n  } = useFieldArray({\n    name: name,\n    control\n  });\n  const handleAddLayer = () => {\n    append({\n      metaType: \"\",\n      chatMeta: {},\n      optionsMeta: {}\n    });\n    setExpandedLayers([...expandedLayers, false]);\n  };\n  const toggleExpansion = index => {\n    const newExpandedLayers = [...expandedLayers];\n    newExpandedLayers[index] = !newExpandedLayers[index];\n    setExpandedLayers(newExpandedLayers);\n  };\n  useImperativeHandle(ref, () => {\n    return {\n      scrollToTop() {\n        if (layerFormRef.current) {\n          layerFormRef.current.scrollTop = {\n            top: 0,\n            behaviour: \"smooth\"\n          };\n        }\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: layerFormRef,\n    className: \"layerForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-justify-end margin-b-3\",\n      children: /*#__PURE__*/_jsxDEV(CustomButton, {\n        iconProps: {\n          name: CUSTOM_SVG_ICON.PlusCircle,\n          svgType: SVGType.CUSTOM,\n          size: \"huge\"\n        },\n        iconPosition: ICON_POSITION.LEFT,\n        buttonText: \"Add More Layers\",\n        handleClick: handleAddLayer,\n        primaryButton: true,\n        transparent: true,\n        noOutline: true,\n        baseclassname: \"cursor-pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), fields.map((field, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row width-95 padding-2 accordian\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-justify-center flex-align-center width-6 layer\",\n          onClick: () => toggleExpansion(index),\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-bold text-primary-color cursor-pointer\",\n            children: [\"L\", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), expandedLayers[index] && /*#__PURE__*/_jsxDEV(BaseLayerForm, {\n          watch: watch,\n          reset: reset,\n          name: `${name}.${index}`,\n          field: field,\n          control: control,\n          errors: errors,\n          remove: remove,\n          index: index,\n          setValue: setValue,\n          defaultOptions: defaultOptions\n        }, field.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(LayerForm, \"POrgdd7AlWIhrrbMiOwKQnncRfM=\", false, function () {\n  return [useFieldArray];\n});\n_c = LayerForm;\nexport default _c2 = /*#__PURE__*/forwardRef(LayerForm);\nvar _c, _c2;\n$RefreshReg$(_c, \"LayerForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["forwardRef","useImperativeHandle","useRef","useState","useFieldArray","CustomButton","ICON_POSITION","CUSTOM_SVG_ICON","SVGType","BaseLayerForm","jsxDEV","_jsxDEV","LayerForm","props","ref","_s","name","control","watch","errors","reset","setValue","defaultOptions","expandedLayers","setExpandedLayers","layerFormRef","fields","append","remove","move","handleAddLayer","metaType","chatMeta","optionsMeta","toggleExpansion","index","newExpandedLayers","scrollToTop","current","scrollTop","top","behaviour","className","children","iconProps","PlusCircle","svgType","CUSTOM","size","iconPosition","LEFT","buttonText","handleClick","primaryButton","transparent","noOutline","baseclassname","fileName","_jsxFileName","lineNumber","columnNumber","map","field","onClick","id","_c","_c2","$RefreshReg$"],"sources":["E:/BizTecno/slide-fe-service/src/containers/SlidesContainer/LayerForm.tsx"],"sourcesContent":["import {\n  MutableRefObject,\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport { useFieldArray } from \"react-hook-form\";\nimport CustomButton, {\n  ICON_POSITION,\n} from \"components/CustomButton/CustomButton\";\nimport { CUSTOM_SVG_ICON, SVGType } from \"components/SvgIcon\";\nimport BaseLayerForm from \"./LayersForm/BaseLayerForm\";\n\nfunction LayerForm(props: any, ref: any) {\n  const { name, control, watch, errors, reset, setValue , defaultOptions } = props;\n  const [expandedLayers, setExpandedLayers] = useState<boolean[]>([]);\n  const layerFormRef: MutableRefObject<any> = useRef(null);\n  const { fields, append, remove, move } = useFieldArray({\n    name: name,\n    control,\n  });\n\n  const handleAddLayer = () => {\n    append({ metaType: \"\", chatMeta: {}, optionsMeta: {} });\n    setExpandedLayers([...expandedLayers, false]);\n  };\n\n  const toggleExpansion = (index: number) => {\n    const newExpandedLayers = [...expandedLayers];\n    newExpandedLayers[index] = !newExpandedLayers[index];\n    setExpandedLayers(newExpandedLayers);\n  };\n\n  useImperativeHandle(\n    ref,\n    () => {\n      return {\n        scrollToTop() {\n          if (layerFormRef.current) {\n            layerFormRef.current.scrollTop = { top: 0, behaviour: \"smooth\" };\n          }\n        },\n      };\n    },\n    []\n  );\n\n  return (\n    <div ref={layerFormRef} className=\"layerForm\">\n      <div className=\"flex flex-justify-end margin-b-3\">\n        <CustomButton\n          iconProps={{\n            name: CUSTOM_SVG_ICON.PlusCircle,\n            svgType: SVGType.CUSTOM,\n            size: \"huge\",\n          }}\n          iconPosition={ICON_POSITION.LEFT}\n          buttonText=\"Add More Layers\"\n          handleClick={handleAddLayer}\n          primaryButton\n          transparent\n          noOutline\n          baseclassname={\"cursor-pointer\"}\n        />\n      </div>\n\n      {fields.map((field, index) => {\n        return (\n          <div\n            key={index}\n            className=\"flex flex-row width-95 padding-2 accordian\"\n          >\n            <div\n              key={index}\n              className=\"flex flex-justify-center flex-align-center width-6 layer\"\n              onClick={() => toggleExpansion(index)}\n            >\n              <h1 className=\"text-bold text-primary-color cursor-pointer\">\n                L{index + 1}\n              </h1>\n            </div>\n\n            {expandedLayers[index] && (\n              <BaseLayerForm\n                watch={watch}\n                reset={reset}\n                name={`${name}.${index}`}\n                key={field.id}\n                field={field}\n                control={control}\n                errors={errors}\n                remove={remove}\n                index={index}\n                setValue={setValue}\n                defaultOptions={defaultOptions}\n              />\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nexport default forwardRef(LayerForm);\n"],"mappings":";;AAAA,SAEEA,UAAU,EACVC,mBAAmB,EACnBC,MAAM,EACNC,QAAQ,QACH,OAAO;AACd,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAOC,YAAY,IACjBC,aAAa,QACR,sCAAsC;AAC7C,SAASC,eAAe,EAAEC,OAAO,QAAQ,oBAAoB;AAC7D,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,SAASA,CAACC,KAAU,EAAEC,GAAQ,EAAE;EAAAC,EAAA;EACvC,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC,KAAK;IAAEC,MAAM;IAAEC,KAAK;IAAEC,QAAQ;IAAGC;EAAe,CAAC,GAAGT,KAAK;EAChF,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAY,EAAE,CAAC;EACnE,MAAMsB,YAAmC,GAAGvB,MAAM,CAAC,IAAI,CAAC;EACxD,MAAM;IAAEwB,MAAM;IAAEC,MAAM;IAAEC,MAAM;IAAEC;EAAK,CAAC,GAAGzB,aAAa,CAAC;IACrDY,IAAI,EAAEA,IAAI;IACVC;EACF,CAAC,CAAC;EAEF,MAAMa,cAAc,GAAGA,CAAA,KAAM;IAC3BH,MAAM,CAAC;MAAEI,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE,CAAC,CAAC;MAAEC,WAAW,EAAE,CAAC;IAAE,CAAC,CAAC;IACvDT,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAE,KAAK,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMW,eAAe,GAAIC,KAAa,IAAK;IACzC,MAAMC,iBAAiB,GAAG,CAAC,GAAGb,cAAc,CAAC;IAC7Ca,iBAAiB,CAACD,KAAK,CAAC,GAAG,CAACC,iBAAiB,CAACD,KAAK,CAAC;IACpDX,iBAAiB,CAACY,iBAAiB,CAAC;EACtC,CAAC;EAEDnC,mBAAmB,CACjBa,GAAG,EACH,MAAM;IACJ,OAAO;MACLuB,WAAWA,CAAA,EAAG;QACZ,IAAIZ,YAAY,CAACa,OAAO,EAAE;UACxBb,YAAY,CAACa,OAAO,CAACC,SAAS,GAAG;YAAEC,GAAG,EAAE,CAAC;YAAEC,SAAS,EAAE;UAAS,CAAC;QAClE;MACF;IACF,CAAC;EACH,CAAC,EACD,EACF,CAAC;EAED,oBACE9B,OAAA;IAAKG,GAAG,EAAEW,YAAa;IAACiB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAC3ChC,OAAA;MAAK+B,SAAS,EAAC,kCAAkC;MAAAC,QAAA,eAC/ChC,OAAA,CAACN,YAAY;QACXuC,SAAS,EAAE;UACT5B,IAAI,EAAET,eAAe,CAACsC,UAAU;UAChCC,OAAO,EAAEtC,OAAO,CAACuC,MAAM;UACvBC,IAAI,EAAE;QACR,CAAE;QACFC,YAAY,EAAE3C,aAAa,CAAC4C,IAAK;QACjCC,UAAU,EAAC,iBAAiB;QAC5BC,WAAW,EAAEtB,cAAe;QAC5BuB,aAAa;QACbC,WAAW;QACXC,SAAS;QACTC,aAAa,EAAE;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAELlC,MAAM,CAACmC,GAAG,CAAC,CAACC,KAAK,EAAE3B,KAAK,KAAK;MAC5B,oBACExB,OAAA;QAEE+B,SAAS,EAAC,4CAA4C;QAAAC,QAAA,gBAEtDhC,OAAA;UAEE+B,SAAS,EAAC,0DAA0D;UACpEqB,OAAO,EAAEA,CAAA,KAAM7B,eAAe,CAACC,KAAK,CAAE;UAAAQ,QAAA,eAEtChC,OAAA;YAAI+B,SAAS,EAAC,6CAA6C;YAAAC,QAAA,GAAC,GACzD,EAACR,KAAK,GAAG,CAAC;UAAA;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT;QAAC,GANAzB,KAAK;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOP,CAAC,EAELrC,cAAc,CAACY,KAAK,CAAC,iBACpBxB,OAAA,CAACF,aAAa;UACZS,KAAK,EAAEA,KAAM;UACbE,KAAK,EAAEA,KAAM;UACbJ,IAAI,EAAG,GAAEA,IAAK,IAAGmB,KAAM,EAAE;UAEzB2B,KAAK,EAAEA,KAAM;UACb7C,OAAO,EAAEA,OAAQ;UACjBE,MAAM,EAAEA,MAAO;UACfS,MAAM,EAAEA,MAAO;UACfO,KAAK,EAAEA,KAAM;UACbd,QAAQ,EAAEA,QAAS;UACnBC,cAAc,EAAEA;QAAe,GAP1BwC,KAAK,CAACE,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQd,CACF;MAAA,GA3BIzB,KAAK;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA4BP,CAAC;IAEV,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC7C,EAAA,CAzFQH,SAAS;EAAA,QAIyBR,aAAa;AAAA;AAAA6D,EAAA,GAJ/CrD,SAAS;AA0FlB,eAAAsD,GAAA,gBAAelE,UAAU,CAACY,SAAS,CAAC;AAAC,IAAAqD,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}