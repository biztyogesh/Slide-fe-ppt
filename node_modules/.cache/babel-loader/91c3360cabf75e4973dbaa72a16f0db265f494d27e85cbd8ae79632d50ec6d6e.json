{"ast":null,"code":"var _jsxFileName = \"E:\\\\BizTecno\\\\slide-fe-service\\\\src\\\\components\\\\FormInputs\\\\HookFormFieldArray.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { HookFormInput } from \"components/FormInputs\";\nimport CustomButton from \"components/CustomButton\";\nimport { useFieldArray } from \"react-hook-form\";\nimport { CUSTOM_SVG_ICON, SVGType } from \"components/SvgIcon\";\nimport { ICON_POSITION } from \"components/CustomButton/CustomButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function HookFormFieldArray({\n  baseName,\n  control,\n  errors,\n  fieldName1,\n  fieldName2,\n  label\n}) {\n  _s();\n  const firstLetterCapitalized = label.charAt(0).toUpperCase();\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    name: `${baseName}`,\n    control\n  });\n  const handleAppend = () => {\n    append({});\n  };\n  const handleRemove = index => {\n    remove(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"margin-l-2 flex flex-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row padding-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-4 text-bold\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"button\",\n        transparent: true,\n        primaryButton: true,\n        iconProps: {\n          name: CUSTOM_SVG_ICON.PlusCircle,\n          svgType: SVGType.CUSTOM,\n          size: \"small\",\n          baseclassname: \"text-secondary-color\"\n        },\n        noOutline: true,\n        iconPosition: ICON_POSITION.LEFT,\n        handleClick: handleAppend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), fields.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row flex-justify-center flex-align-center background-secondary-color width-5 margin-t-2 margin-b-4 text-5 text-primary-color\",\n        children: [firstLetterCapitalized, index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(HookFormInput, {\n        control: control,\n        errors: errors,\n        validation: {},\n        name: `${baseName}[${index}].${fieldName1}`,\n        label: `${fieldName1.toUpperCase()} ${index + 1}`,\n        id: `${baseName}[${index}].${fieldName1}`,\n        baseClassName: \"width-45 margin-l-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(HookFormInput, {\n        control: control,\n        errors: errors,\n        validation: {},\n        name: `${baseName}[${index}].${fieldName2}`,\n        label: `${fieldName2.toUpperCase()} ${index + 1}`,\n        id: `${baseName}[${index}].${fieldName2}`,\n        baseClassName: \"width-45 margin-l-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), fields.length !== 1 && /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"button\",\n        transparent: true,\n        primaryButton: true,\n        iconProps: {\n          name: CUSTOM_SVG_ICON.Delete,\n          svgType: SVGType.CUSTOM,\n          size: \"huge\",\n          baseclassname: \"text-danger-color\"\n        },\n        noOutline: true,\n        iconPosition: ICON_POSITION.LEFT,\n        handleClick: () => handleRemove(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 39\n      }, this)]\n    }, field.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(HookFormFieldArray, \"ZUdpHmDLsHW29pYmVu7vZWnnIQg=\", false, function () {\n  return [useFieldArray];\n});\n_c = HookFormFieldArray;\nvar _c;\n$RefreshReg$(_c, \"HookFormFieldArray\");","map":{"version":3,"names":["React","HookFormInput","CustomButton","useFieldArray","CUSTOM_SVG_ICON","SVGType","ICON_POSITION","jsxDEV","_jsxDEV","HookFormFieldArray","baseName","control","errors","fieldName1","fieldName2","label","_s","firstLetterCapitalized","charAt","toUpperCase","fields","append","remove","name","handleAppend","handleRemove","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","transparent","primaryButton","iconProps","PlusCircle","svgType","CUSTOM","size","baseclassname","noOutline","iconPosition","LEFT","handleClick","map","field","validation","id","baseClassName","length","Delete","_c","$RefreshReg$"],"sources":["E:/BizTecno/slide-fe-service/src/components/FormInputs/HookFormFieldArray.tsx"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { HookFormInput } from \"components/FormInputs\";\nimport CustomButton from \"components/CustomButton\";\nimport { useFieldArray } from \"react-hook-form\";\nimport LabelComponent from \"components/LabelComponent\";\nimport { CUSTOM_SVG_ICON, SVGType } from \"components/SvgIcon\";\nimport { ICON_POSITION } from \"components/CustomButton/CustomButton\";\n\ninterface FieldArrayFormProps {\n  baseName: string;\n  control: any;\n  errors: any;\n  fieldName1: string;\n  fieldName2: string;\n  label: string;\n}\n\nexport function HookFormFieldArray({\n  baseName,\n  control,\n  errors,\n  fieldName1,\n  fieldName2,\n  label\n}: FieldArrayFormProps) {\n  const firstLetterCapitalized = label.charAt(0).toUpperCase();\n  const { fields, append, remove } = useFieldArray({\n    name: `${baseName}`,\n    control,\n  });\n\n  const handleAppend = () => {\n    append({});\n  };\n\n  const handleRemove = (index: number) => {\n    remove(index);\n  };\n\n  return (\n    <div className=\"margin-l-2 flex flex-column\">\n      <div className=\"flex flex-row padding-2\">\n        <label className=\"text-4 text-bold\">{label}</label>\n        <CustomButton\n                type=\"button\"\n                transparent\n                primaryButton\n                iconProps={{\n                  name: CUSTOM_SVG_ICON.PlusCircle,\n                  svgType: SVGType.CUSTOM,\n                  size: \"small\",\n                  baseclassname: \"text-secondary-color\",\n                }}\n                noOutline\n                iconPosition={ICON_POSITION.LEFT}\n                handleClick={handleAppend}\n              />\n              </div>\n        {fields.map((field: any, index: number) => (\n          <div key={field.id} className=\"flex flex-row\">\n            <div className=\"flex flex-row flex-justify-center flex-align-center background-secondary-color width-5 margin-t-2 margin-b-4 text-5 text-primary-color\">{firstLetterCapitalized}{index+1}</div>\n            <HookFormInput\n              control={control}\n              errors={errors}\n              validation={{}}\n              name={`${baseName}[${index}].${fieldName1}`}\n              label={`${fieldName1.toUpperCase()} ${index + 1}`}\n              id={`${baseName}[${index}].${fieldName1}`}\n              baseClassName=\"width-45 margin-l-3\"\n            />\n            <HookFormInput\n              control={control}\n              errors={errors}\n              validation={{}}\n              name={`${baseName}[${index}].${fieldName2}`}\n              label={`${fieldName2.toUpperCase()} ${index + 1}`}\n              id={`${baseName}[${index}].${fieldName2}`}\n              baseClassName=\"width-45 margin-l-3\"\n            />\n              {fields.length !== 1 && <CustomButton\n                type=\"button\"\n                transparent\n                primaryButton\n                iconProps={{\n                  name: CUSTOM_SVG_ICON.Delete,\n                  svgType: SVGType.CUSTOM,\n                  size: \"huge\",\n                  baseclassname: \"text-danger-color\",\n                }}\n                noOutline\n                iconPosition={ICON_POSITION.LEFT}\n                handleClick={() => handleRemove(index)}\n              />}\n          </div>\n        ))}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}