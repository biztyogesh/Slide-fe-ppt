{"ast":null,"code":"var _jsxFileName = \"E:\\\\BizTecno\\\\slide-fe-service\\\\src\\\\containers\\\\SlidesContainer\\\\LayersForm\\\\MetaTypeListForm.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useFieldArray } from \"react-hook-form\";\nimport { CUSTOM_SVG_ICON, SVGType } from \"components/SvgIcon\";\nimport CustomButton, { ICON_POSITION } from \"components/CustomButton/CustomButton\";\nimport { HookFormInput } from \"components/FormInputs\";\nimport LayerForm from \"../LayerForm\";\nimport { MetaTypeOptions } from \"../utils\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet defaultOptions = [{\n  label: \"Select\",\n  value: \"\"\n}, {\n  label: \"IMAGE\",\n  value: MetaTypeOptions.IMAGE\n}, {\n  label: \"SHAPE\",\n  value: MetaTypeOptions.SHAPE\n}, {\n  label: \"TEXT\",\n  value: MetaTypeOptions.TEXT\n}, {\n  label: \"TABLE\",\n  value: MetaTypeOptions.TABLE\n}, {\n  label: \"LIST\",\n  value: MetaTypeOptions.LIST\n}, {\n  label: \"CHART\",\n  value: MetaTypeOptions.CHART\n}];\nfunction MetaTypeListForm({\n  control,\n  errors,\n  name,\n  watch,\n  setValue\n}) {\n  _s();\n  const [expand, setExpand] = useState([]);\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    name: `${name}.optionsMeta.layers`,\n    control\n  });\n  const handleAppend = () => {\n    append({\n      layers: [{\n        metaType: \"\",\n        chatMeta: {},\n        optionsMeta: {}\n      }]\n    });\n    setExpand([...expand, false]);\n  };\n  const handleRemoveLayer = index => {\n    remove(index);\n  };\n  const toggleExpansion = index => {\n    const newExpandedLayers = [...expand];\n    newExpandedLayers[index] = !newExpandedLayers[index];\n    setExpand(newExpandedLayers);\n  };\n  const getExpandIcon = expanded => {\n    return expanded ? CUSTOM_SVG_ICON.CaretUp : CUSTOM_SVG_ICON.CaretDown;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"width-90 list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-align-center\",\n      children: [/*#__PURE__*/_jsxDEV(HookFormInput, {\n        validation: {},\n        control: control,\n        errors: errors,\n        baseClassName: \"width-25  padding-l-4 padding-t-3\",\n        label: \"Id\",\n        id: `${name}.chatMeta.id`,\n        name: `${name}.chatMeta.id`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        iconProps: {\n          name: CUSTOM_SVG_ICON.PlusCircle,\n          svgType: SVGType.CUSTOM,\n          size: \"small\"\n        },\n        iconPosition: ICON_POSITION.LEFT,\n        handleClick: handleAppend,\n        noOutline: true,\n        transparent: true,\n        primaryButton: true,\n        buttonText: \"Add Layers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), fields.map((field, optionIndex) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-column margin-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row flex-justify-between padding-2 nested-layer\",\n          onClick: () => toggleExpansion(optionIndex),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"flex flex-justify-center flex-align-center text-6 text-bold text-primary-color cursor-pointer\",\n            children: [\"Layer \", optionIndex + 1, /*#__PURE__*/_jsxDEV(CustomButton, {\n              iconProps: {\n                svgType: SVGType.CUSTOM,\n                name: getExpandIcon(expand[optionIndex]),\n                size: \"small\",\n                baseclassname: \"text-primary-color text-align-center\"\n              },\n              iconPosition: ICON_POSITION.RIGHT,\n              handleClick: () => toggleExpansion(optionIndex),\n              baseclassname: `toggle-icon ${expand ? \"expanded\" : \"collapsed\"} margin-l-3`,\n              transparent: true,\n              noOutline: true,\n              primaryButton: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            transparent: true,\n            primaryButton: true,\n            iconProps: {\n              name: CUSTOM_SVG_ICON.Delete,\n              svgType: SVGType.CUSTOM,\n              size: \"huge\",\n              baseclassname: \"text-danger-color\"\n            },\n            noOutline: true,\n            iconPosition: ICON_POSITION.LEFT,\n            handleClick: () => handleRemoveLayer(optionIndex),\n            baseclassname: \"cursor-pointer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), expand[optionIndex] && /*#__PURE__*/_jsxDEV(LayerForm, {\n          name: `${name}.optionsMeta.layers.${optionIndex}.layers`,\n          control: control,\n          watch: watch,\n          errors: errors,\n          defaultOptions: defaultOptions,\n          setValue: setValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 37\n        }, this)]\n      }, field.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(MetaTypeListForm, \"tTbJPL5whKpqsxf3njrOOpZcxLM=\", false, function () {\n  return [useFieldArray];\n});\n_c = MetaTypeListForm;\nexport default MetaTypeListForm;\nvar _c;\n$RefreshReg$(_c, \"MetaTypeListForm\");","map":{"version":3,"names":["useState","useFieldArray","CUSTOM_SVG_ICON","SVGType","CustomButton","ICON_POSITION","HookFormInput","LayerForm","MetaTypeOptions","jsxDEV","_jsxDEV","defaultOptions","label","value","IMAGE","SHAPE","TEXT","TABLE","LIST","CHART","MetaTypeListForm","control","errors","name","watch","setValue","_s","expand","setExpand","fields","append","remove","handleAppend","layers","metaType","chatMeta","optionsMeta","handleRemoveLayer","index","toggleExpansion","newExpandedLayers","getExpandIcon","expanded","CaretUp","CaretDown","className","children","validation","baseClassName","id","fileName","_jsxFileName","lineNumber","columnNumber","iconProps","PlusCircle","svgType","CUSTOM","size","iconPosition","LEFT","handleClick","noOutline","transparent","primaryButton","buttonText","map","field","optionIndex","onClick","baseclassname","RIGHT","type","Delete","_c","$RefreshReg$"],"sources":["E:/BizTecno/slide-fe-service/src/containers/SlidesContainer/LayersForm/MetaTypeListForm.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useFieldArray } from \"react-hook-form\";\nimport { CUSTOM_SVG_ICON, SVGType } from \"components/SvgIcon\";\nimport  CustomButton , { ICON_POSITION } from \"components/CustomButton/CustomButton\";\nimport { HookFormInput } from \"components/FormInputs\";\nimport LayerForm from \"../LayerForm\";\nimport { MetaTypeOptions } from \"../utils\";\n\nimport \"./style.scss\";\n\nlet defaultOptions = [\n  { label: \"Select\", value: \"\" },\n  { label: \"IMAGE\", value: MetaTypeOptions.IMAGE },\n  { label: \"SHAPE\", value: MetaTypeOptions.SHAPE },\n  { label: \"TEXT\", value: MetaTypeOptions.TEXT },\n  { label: \"TABLE\", value: MetaTypeOptions.TABLE },\n  { label: \"LIST\", value: MetaTypeOptions.LIST },\n  { label: \"CHART\", value: MetaTypeOptions.CHART },\n];\n\ninterface Props {\n  control: any;\n  errors: any;\n  name: string;\n  watch: any;\n  setValue?: any;\n}\n\nfunction MetaTypeListForm({ control, errors, name, watch , setValue }: Props) {\n  const [expand, setExpand] = useState<boolean[]>([]);\n  const { fields, append, remove } = useFieldArray({\n    name: `${name}.optionsMeta.layers`,\n    control,\n  });\n\n  const handleAppend = () => {\n    append({\n      layers: [\n        {\n          metaType: \"\",\n          chatMeta: {},\n          optionsMeta: {},\n        },\n      ],\n    });\n    setExpand([...expand, false]);\n  };\n\n  const handleRemoveLayer = (index: number) => {\n    remove(index);\n  };\n\n  const toggleExpansion = (index: number) => {\n    const newExpandedLayers = [...expand];\n    newExpandedLayers[index] = !newExpandedLayers[index];\n    setExpand(newExpandedLayers);\n  };\n\n  const getExpandIcon = (expanded:any) => {\n    return expanded ? CUSTOM_SVG_ICON.CaretUp : CUSTOM_SVG_ICON.CaretDown;\n  }\n\n  return (\n    <div className=\"width-90 list-container\">\n      <div className=\"flex flex-align-center\">\n        <HookFormInput\n          validation={{}}\n          control={control}\n          errors={errors}\n          baseClassName=\"width-25  padding-l-4 padding-t-3\"\n          label=\"Id\"\n          id={`${name}.chatMeta.id`}\n          name={`${name}.chatMeta.id`}\n        />\n        <CustomButton\n          iconProps={{\n            name: CUSTOM_SVG_ICON.PlusCircle,\n            svgType: SVGType.CUSTOM,\n            size: \"small\",\n          }}\n          iconPosition={ICON_POSITION.LEFT}\n          handleClick={handleAppend}\n          noOutline\n          transparent\n          primaryButton\n          buttonText=\"Add Layers\"\n        />\n      </div>\n\n      {fields.map((field, optionIndex) => {\n        return (\n          <div key={field.id} className=\"flex flex-column margin-2\">\n            <div className=\"flex flex-row flex-justify-between padding-2 nested-layer\"  onClick={() => toggleExpansion(optionIndex)}>\n              <span className=\"flex flex-justify-center flex-align-center text-6 text-bold text-primary-color cursor-pointer\">\n                Layer {optionIndex + 1}\n                <CustomButton\n                  iconProps={{\n                    svgType: SVGType.CUSTOM,\n                    name: getExpandIcon(expand[optionIndex]),\n                    size: \"small\",\n                    baseclassname: \"text-primary-color text-align-center\",\n                  }}\n                  iconPosition={ICON_POSITION.RIGHT}\n                  handleClick={() => toggleExpansion(optionIndex)}\n                  baseclassname={`toggle-icon ${expand ? \"expanded\" : \"collapsed\"} margin-l-3`}\n                  transparent\n                  noOutline\n                  primaryButton\n                />\n              </span>\n                <CustomButton\n                  type=\"button\"\n                  transparent\n                  primaryButton\n                  iconProps={{\n                    name: CUSTOM_SVG_ICON.Delete,\n                    svgType: SVGType.CUSTOM,\n                    size: \"huge\",\n                    baseclassname: \"text-danger-color\",\n                  }}\n                  noOutline\n                  iconPosition={ICON_POSITION.LEFT}\n                  handleClick={() => handleRemoveLayer(optionIndex)}\n                  baseclassname={\"cursor-pointer\"}\n                />\n            </div>\n            {expand[optionIndex] && <LayerForm name={`${name}.optionsMeta.layers.${optionIndex}.layers`} control={control} watch={watch} errors={errors} defaultOptions={defaultOptions} setValue={setValue}/>}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default MetaTypeListForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}