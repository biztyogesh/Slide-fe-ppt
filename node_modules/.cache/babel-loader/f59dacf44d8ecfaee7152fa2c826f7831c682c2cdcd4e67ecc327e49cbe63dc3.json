{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { infoReducer, itemsReducer, resourcesReducer } from './reducer';\nimport { rextActionFunctions, resetUpdateAction, createIdentityAction } from './actions';\nimport { defaultRextInfo } from './defautState';\nimport createSagaEvent from './saga';\nexport const getRextActionCreators = (keys, actionidentity) => {\n  return {\n    request: (params, overrideMetsKeys, resources) => rextActionFunctions.request({\n      actions: actionidentity.REXT_FETCH,\n      keys: {\n        ...keys,\n        ...overrideMetsKeys\n      }\n    }, params, resources),\n    update: (params, overrideMetsKeys, resources) => rextActionFunctions.request({\n      actions: actionidentity.REXT_UPDATE,\n      keys: {\n        ...keys,\n        ...overrideMetsKeys\n      }\n    }, params, resources),\n    multiRequest: (params, resources) => rextActionFunctions.request({\n      actions: actionidentity.REXT_MULTI_FETCH,\n      keys\n    }, params, resources),\n    multiUpdate: (params, resources) => rextActionFunctions.request({\n      actions: actionidentity.REXT_MULTI_UPDATE_FETCH,\n      keys\n    }, params, resources),\n    resetUpdate: () => resetUpdateAction(actionidentity.RESET_UPDATE_STATE, {\n      actions: actionidentity.REXT_UPDATE,\n      keys\n    })\n  };\n};\nexport const rext = (items, info, resources, requestRextActionCreators, saga) => ({\n  reducers: combineReducers({\n    info,\n    items,\n    resources\n  }),\n  ...requestRextActionCreators,\n  saga\n});\nexport const createRext = keys => {\n  const {\n    identity\n  } = keys;\n  const actionidentity = createIdentityAction(identity);\n  const info = infoReducer(actionidentity, defaultRextInfo);\n  const items = itemsReducer(actionidentity);\n  const resources = resourcesReducer(actionidentity);\n  const rextActionCreators = getRextActionCreators(keys, actionidentity);\n  const sagaEvent = createSagaEvent(actionidentity);\n  return rext(items, info, resources, rextActionCreators, sagaEvent);\n};","map":{"version":3,"names":["combineReducers","infoReducer","itemsReducer","resourcesReducer","rextActionFunctions","resetUpdateAction","createIdentityAction","defaultRextInfo","createSagaEvent","getRextActionCreators","keys","actionidentity","request","params","overrideMetsKeys","resources","actions","REXT_FETCH","update","REXT_UPDATE","multiRequest","REXT_MULTI_FETCH","multiUpdate","REXT_MULTI_UPDATE_FETCH","resetUpdate","RESET_UPDATE_STATE","rext","items","info","requestRextActionCreators","saga","reducers","createRext","identity","rextActionCreators","sagaEvent"],"sources":["E:/BizTecno/slide-fe-service/src/store/baseProvider/rext/createRext.ts"],"sourcesContent":["import { combineReducers, Reducer } from 'redux';\nimport { infoReducer, itemsReducer, resourcesReducer } from './reducer';\nimport {\n  rextActionFunctions,\n  resetUpdateAction,\n  createIdentityAction,\n} from './actions';\nimport {\n  IRextKeys,\n  IRextActionCreators,\n  IRextParams,\n  IRextAction,\n  IRextInfo,\n  IRext,\n  ActionIdentity,\n  IOverrideRextKeys,\n} from './interface';\nimport { defaultRextInfo } from './defautState';\nimport createSagaEvent from './saga';\n\nexport const getRextActionCreators = (\n  keys: IRextKeys,\n  actionidentity: ActionIdentity,\n): IRextActionCreators => {\n  return {\n    request: (\n      params: IRextParams,\n      overrideMetsKeys?: IOverrideRextKeys,\n      resources?: any,\n    ) =>\n      rextActionFunctions.request(\n        {\n          actions: actionidentity.REXT_FETCH,\n          keys: { ...keys, ...overrideMetsKeys },\n        },\n        params,\n        resources,\n      ),\n    update: (\n      params: IRextParams,\n      overrideMetsKeys?: IOverrideRextKeys,\n      resources?: any,\n    ) =>\n      rextActionFunctions.request(\n        {\n          actions: actionidentity.REXT_UPDATE,\n          keys: { ...keys, ...overrideMetsKeys },\n        },\n        params,\n        resources,\n      ),\n    multiRequest: (params: IRextParams[], resources?: any) =>\n      rextActionFunctions.request(\n        { actions: actionidentity.REXT_MULTI_FETCH, keys },\n        params,\n        resources,\n      ),\n    multiUpdate: (params: IRextParams[], resources?: any) =>\n      rextActionFunctions.request(\n        { actions: actionidentity.REXT_MULTI_UPDATE_FETCH, keys },\n        params,\n        resources,\n      ),\n    resetUpdate: () =>\n      resetUpdateAction(actionidentity.RESET_UPDATE_STATE, {\n        actions: actionidentity.REXT_UPDATE,\n        keys,\n      }),\n  };\n};\nexport const rext = (\n  items: Reducer<any, IRextAction>,\n  info: Reducer<IRextInfo, IRextAction>,\n  resources: Reducer<any, IRextAction>,\n  requestRextActionCreators: IRextActionCreators,\n  saga: any,\n): IRext => ({\n  reducers: combineReducers({\n    info,\n    items,\n    resources,\n  }),\n  ...requestRextActionCreators,\n  saga,\n});\nexport const createRext = (keys: IRextKeys): IRext => {\n  const { identity } = keys;\n  const actionidentity = createIdentityAction(identity);\n  const info = infoReducer(actionidentity, defaultRextInfo);\n  const items = itemsReducer(actionidentity);\n  const resources = resourcesReducer(actionidentity);\n  const rextActionCreators = getRextActionCreators(keys, actionidentity);\n  const sagaEvent = createSagaEvent(actionidentity);\n  return rext(items, info, resources, rextActionCreators, sagaEvent);\n};\n"],"mappings":"AAAA,SAASA,eAAe,QAAiB,OAAO;AAChD,SAASC,WAAW,EAAEC,YAAY,EAAEC,gBAAgB,QAAQ,WAAW;AACvE,SACEC,mBAAmB,EACnBC,iBAAiB,EACjBC,oBAAoB,QACf,WAAW;AAWlB,SAASC,eAAe,QAAQ,eAAe;AAC/C,OAAOC,eAAe,MAAM,QAAQ;AAEpC,OAAO,MAAMC,qBAAqB,GAAGA,CACnCC,IAAe,EACfC,cAA8B,KACN;EACxB,OAAO;IACLC,OAAO,EAAEA,CACPC,MAAmB,EACnBC,gBAAoC,EACpCC,SAAe,KAEfX,mBAAmB,CAACQ,OAAO,CACzB;MACEI,OAAO,EAAEL,cAAc,CAACM,UAAU;MAClCP,IAAI,EAAE;QAAE,GAAGA,IAAI;QAAE,GAAGI;MAAiB;IACvC,CAAC,EACDD,MAAM,EACNE,SACF,CAAC;IACHG,MAAM,EAAEA,CACNL,MAAmB,EACnBC,gBAAoC,EACpCC,SAAe,KAEfX,mBAAmB,CAACQ,OAAO,CACzB;MACEI,OAAO,EAAEL,cAAc,CAACQ,WAAW;MACnCT,IAAI,EAAE;QAAE,GAAGA,IAAI;QAAE,GAAGI;MAAiB;IACvC,CAAC,EACDD,MAAM,EACNE,SACF,CAAC;IACHK,YAAY,EAAEA,CAACP,MAAqB,EAAEE,SAAe,KACnDX,mBAAmB,CAACQ,OAAO,CACzB;MAAEI,OAAO,EAAEL,cAAc,CAACU,gBAAgB;MAAEX;IAAK,CAAC,EAClDG,MAAM,EACNE,SACF,CAAC;IACHO,WAAW,EAAEA,CAACT,MAAqB,EAAEE,SAAe,KAClDX,mBAAmB,CAACQ,OAAO,CACzB;MAAEI,OAAO,EAAEL,cAAc,CAACY,uBAAuB;MAAEb;IAAK,CAAC,EACzDG,MAAM,EACNE,SACF,CAAC;IACHS,WAAW,EAAEA,CAAA,KACXnB,iBAAiB,CAACM,cAAc,CAACc,kBAAkB,EAAE;MACnDT,OAAO,EAAEL,cAAc,CAACQ,WAAW;MACnCT;IACF,CAAC;EACL,CAAC;AACH,CAAC;AACD,OAAO,MAAMgB,IAAI,GAAGA,CAClBC,KAAgC,EAChCC,IAAqC,EACrCb,SAAoC,EACpCc,yBAA8C,EAC9CC,IAAS,MACE;EACXC,QAAQ,EAAE/B,eAAe,CAAC;IACxB4B,IAAI;IACJD,KAAK;IACLZ;EACF,CAAC,CAAC;EACF,GAAGc,yBAAyB;EAC5BC;AACF,CAAC,CAAC;AACF,OAAO,MAAME,UAAU,GAAItB,IAAe,IAAY;EACpD,MAAM;IAAEuB;EAAS,CAAC,GAAGvB,IAAI;EACzB,MAAMC,cAAc,GAAGL,oBAAoB,CAAC2B,QAAQ,CAAC;EACrD,MAAML,IAAI,GAAG3B,WAAW,CAACU,cAAc,EAAEJ,eAAe,CAAC;EACzD,MAAMoB,KAAK,GAAGzB,YAAY,CAACS,cAAc,CAAC;EAC1C,MAAMI,SAAS,GAAGZ,gBAAgB,CAACQ,cAAc,CAAC;EAClD,MAAMuB,kBAAkB,GAAGzB,qBAAqB,CAACC,IAAI,EAAEC,cAAc,CAAC;EACtE,MAAMwB,SAAS,GAAG3B,eAAe,CAACG,cAAc,CAAC;EACjD,OAAOe,IAAI,CAACC,KAAK,EAAEC,IAAI,EAAEb,SAAS,EAAEmB,kBAAkB,EAAEC,SAAS,CAAC;AACpE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}