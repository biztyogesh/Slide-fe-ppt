{"ast":null,"code":"var _jsxFileName = \"E:\\\\BizTecno\\\\slide-fe-service\\\\src\\\\containers\\\\Logs\\\\LogsContainer.tsx\",\n  _s = $RefreshSig$();\nimport CustomButton from \"components/CustomButton\";\nimport CustomTable from \"components/CustomTableComponent/CustomTable\";\nimport { HookFormInput } from \"components/FormInputs\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { requestListLogs } from \"store/rext\";\nimport { getLogsListState } from \"store/selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet columns = [{\n  key: \"type\",\n  header: \"Type\",\n  sort: true,\n  sortKey: \"type\"\n}, {\n  key: \"event\",\n  header: \"Event\",\n  sort: true,\n  sortKey: \"event\"\n}, {\n  key: \"message\",\n  header: \"Message\",\n  sort: false\n}, {\n  key: \"createdAt\",\n  header: \"Time Stamp\",\n  sort: true,\n  sortKey: \"createdAt\"\n}];\nfunction LogsContainer() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    data,\n    fetching\n  } = useSelector(getLogsListState);\n  const {\n    records,\n    paginationInfo\n  } = data;\n  const [currentPage, setCurrentPage] = useState((paginationInfo === null || paginationInfo === void 0 ? void 0 : paginationInfo.currentPage) || 0);\n  const [filterValues, setFilterValues] = useState();\n  const {\n    handleSubmit,\n    formState: {\n      errors\n    },\n    control\n  } = useForm({});\n  const [sortingCriteria, setSortingCriteria] = useState({\n    sortBy: \"type\",\n    sortOrder: \"ASC\"\n  });\n  const handleOnSubmit = data => {\n    setFilterValues({\n      startDate: `${data.startDate}T00:00:00-08:00`,\n      endDate: `${data.endDate}T23:59:59-08:00`\n    });\n    const transformedData = {\n      page: currentPage,\n      pageSize: 500,\n      startDate: `${data.startDate}T00:00:00-08:00`,\n      endDate: `${data.endDate}T23:59:59-08:00`,\n      sort: sortingCriteria.sortBy,\n      sortOrder: sortingCriteria.sortOrder\n    };\n    dispatch(requestListLogs(transformedData));\n  };\n  const handleSortChange = criteria => {\n    setSortingCriteria(criteria);\n    dispatch(requestListLogs({\n      ...filterValues,\n      page: currentPage,\n      pageSize: 500,\n      sort: criteria.sortBy,\n      sortOrder: criteria.sortOrder\n    }));\n  };\n  const handlePaginationChange = (e, {\n    activePage\n  }) => {\n    setCurrentPage(activePage);\n    dispatch(requestListLogs({\n      ...filterValues,\n      page: currentPage,\n      pageSize: 500,\n      sort: sortingCriteria.sortBy,\n      sortOrder: sortingCriteria.sortOrder\n    }));\n  };\n  console.log(data);\n  return (\n    /*#__PURE__*/\n    // <div className=\"height-100 padding-2\">\n    _jsxDEV(CustomTable, {\n      tableData: data.records,\n      hasPagination: true,\n      paginationData: data.paginationInfo,\n      currentPage: currentPage,\n      columns: columns,\n      fetching: fetching || false,\n      handlePaginationChange: handlePaginationChange,\n      sortTable: true,\n      sortByKey: \"userId\",\n      onSortChange: handleSortChange,\n      sortingCriteria: sortingCriteria,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(handleOnSubmit),\n        className: \"flex flex-row flex-align-center flex-justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(HookFormInput, {\n          control: control,\n          errors: errors,\n          type: \"date\",\n          name: \"startDate\",\n          id: \"startDate\",\n          label: \"Start Date\",\n          baseClassName: \"width-25 margin-l-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(HookFormInput, {\n          control: control,\n          errors: errors,\n          type: \"date\",\n          name: \"endDate\",\n          id: \"endDate\",\n          label: \"End Date\",\n          baseClassName: \"width-25 margin-l-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"padding-5\",\n          children: /*#__PURE__*/_jsxDEV(CustomButton, {\n            buttonText: \"Search\",\n            type: \"submit\",\n            primaryButton: true,\n            round: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n    // </div>\n  );\n}\n_s(LogsContainer, \"o+sh5+6RlE5rpq9/tm2sBIwCZnE=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n_c = LogsContainer;\nexport default LogsContainer;\nvar _c;\n$RefreshReg$(_c, \"LogsContainer\");","map":{"version":3,"names":["CustomButton","CustomTable","HookFormInput","React","useState","useForm","useDispatch","useSelector","requestListLogs","getLogsListState","jsxDEV","_jsxDEV","columns","key","header","sort","sortKey","LogsContainer","_s","dispatch","data","fetching","records","paginationInfo","currentPage","setCurrentPage","filterValues","setFilterValues","handleSubmit","formState","errors","control","sortingCriteria","setSortingCriteria","sortBy","sortOrder","handleOnSubmit","startDate","endDate","transformedData","page","pageSize","handleSortChange","criteria","handlePaginationChange","e","activePage","console","log","tableData","hasPagination","paginationData","sortTable","sortByKey","onSortChange","children","onSubmit","className","type","name","id","label","baseClassName","fileName","_jsxFileName","lineNumber","columnNumber","buttonText","primaryButton","round","_c","$RefreshReg$"],"sources":["E:/BizTecno/slide-fe-service/src/containers/Logs/LogsContainer.tsx"],"sourcesContent":["import CustomButton from \"components/CustomButton\";\nimport CustomTable, { IColumns, ISortingCriteria } from \"components/CustomTableComponent/CustomTable\";\nimport { HookFormInput } from \"components/FormInputs\";\nimport React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { requestListLogs } from \"store/rext\";\nimport { getLogsListState } from \"store/selectors\";\n\nlet columns : IColumns[] = [\n  { key: \"type\", header: \"Type\" , sort:true , sortKey:\"type\"},\n  { key: \"event\", header: \"Event\" , sort:true , sortKey:\"event\" },\n  { key: \"message\", header: \"Message\", sort:false },\n  { key: \"createdAt\", header: \"Time Stamp\" , sort:true , sortKey:\"createdAt\" },\n];\n\ninterface IFilterValues {\n  startDate: string;\n    endDate: string;\n}\n\nfunction LogsContainer() {\n  const dispatch = useDispatch();\n  const { data, fetching } = useSelector(getLogsListState);\n  const {records , paginationInfo} = data;\n  const [currentPage, setCurrentPage] = useState<number>(paginationInfo?.currentPage || 0 );\n  const [filterValues, setFilterValues] = useState<IFilterValues>();\n  const { handleSubmit, formState: { errors }, control } = useForm({});\n\n  const [sortingCriteria, setSortingCriteria] = useState<ISortingCriteria>({\n    sortBy: \"type\",\n    sortOrder: \"ASC\",\n  });\n\n  const handleOnSubmit = (data: any) => {\n    setFilterValues({startDate: `${data.startDate}T00:00:00-08:00` , endDate : `${data.endDate}T23:59:59-08:00`});\n    const transformedData = {\n      page: currentPage,\n      pageSize: 500,\n      startDate: `${data.startDate}T00:00:00-08:00`,\n      endDate: `${data.endDate}T23:59:59-08:00`,\n      sort: sortingCriteria.sortBy,\n      sortOrder: sortingCriteria.sortOrder,\n    };\n    dispatch(requestListLogs(transformedData));\n  };\n\n  const handleSortChange = (criteria: ISortingCriteria) => {\n    setSortingCriteria(criteria);\n    dispatch(requestListLogs({\n      ...filterValues,\n      page: currentPage,\n      pageSize: 500,\n      sort: criteria.sortBy,\n      sortOrder: criteria.sortOrder,\n    }));\n  };\n\n  const handlePaginationChange = (e: any, { activePage }: any) => {\n    setCurrentPage(activePage);\n    dispatch(requestListLogs({\n      ...filterValues,\n      page: currentPage,\n      pageSize: 500,\n      sort: sortingCriteria.sortBy,\n      sortOrder: sortingCriteria.sortOrder,\n    }));\n  };\n\n  console.log(data)\n\n  return (\n    // <div className=\"height-100 padding-2\">\n      <CustomTable\n        tableData={data.records}\n        hasPagination\n        paginationData={data.paginationInfo}\n        currentPage={currentPage}\n        columns={columns}\n        fetching={fetching || false}\n        handlePaginationChange={handlePaginationChange}\n        sortTable={true}\n        sortByKey=\"userId\"\n        onSortChange={handleSortChange}\n        sortingCriteria={sortingCriteria}\n      >\n     <form\n        onSubmit={handleSubmit(handleOnSubmit)}\n        className=\"flex flex-row flex-align-center flex-justify-between\"\n      >\n        <HookFormInput\n          control={control}\n          errors={errors}\n          type=\"date\"\n          name=\"startDate\"\n          id=\"startDate\"\n          label=\"Start Date\"\n          baseClassName=\"width-25 margin-l-3\"\n        />\n        <HookFormInput\n          control={control}\n          errors={errors}\n          type=\"date\"\n          name=\"endDate\"\n          id=\"endDate\"\n          label=\"End Date\"\n          baseClassName=\"width-25 margin-l-3\"\n        />\n    \n        <div className=\"padding-5\">\n          <CustomButton buttonText=\"Search\" type=\"submit\" primaryButton round/>\n        </div>\n      </form>\n      </CustomTable>\n      // </div>\n  );\n}\n\nexport default LogsContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}